plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}
apply from: '../shared_dependencies.gradle'

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField("String", "DATABASE_PASSPHRASE", localProperties['databasePassphrase'] ?: "\"com.ariefzuhri.gizee\"")
        buildConfigField("String", "NUTRITIONIX_APP_ID", localProperties['nutritionixAppId'] ?: "\"YOUR_API_KEY\"")
        buildConfigField("String", "NUTRITIONIX_APP_KEY", localProperties['nutritionixAppKey'] ?: "\"YOUR_API_KEY\"")
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    // Data storage
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Pagination
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    // Parsing the JSON format
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // Network logging
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // Coroutines Flow
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // Database encryption
    implementation "net.zetetic:android-database-sqlcipher:$sqlCipherVersion"
    implementation "androidx.sqlite:sqlite-ktx:$sqliteVersion"
}